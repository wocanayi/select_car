<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qtt.selectcar.user.dao.MemberFavMapper">
  <resultMap id="BaseResultMap" type="com.qtt.selectcar.user.entity.MemberFav">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="fav_type" jdbcType="TINYINT" property="favType" />
    <result column="content_id" jdbcType="BIGINT" property="contentId" />
    <result column="fav_time" jdbcType="INTEGER" property="favTime" />
    <result column="fav_ip" jdbcType="VARCHAR" property="favIp" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, member_id, fav_type, content_id, fav_time, fav_ip
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from member_fav
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from member_fav
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.qtt.selectcar.user.entity.MemberFav">
    insert into member_fav (id, member_id, fav_type, 
      content_id, fav_time, fav_ip
      )
    values (#{id,jdbcType=BIGINT}, #{memberId,jdbcType=BIGINT}, #{favType,jdbcType=TINYINT}, 
      #{contentId,jdbcType=BIGINT}, #{favTime,jdbcType=INTEGER}, #{favIp,jdbcType=VARCHAR}
      )
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.qtt.selectcar.user.entity.MemberFav">
    update member_fav
    <set>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="favType != null">
        fav_type = #{favType,jdbcType=TINYINT},
      </if>
      <if test="contentId != null">
        content_id = #{contentId,jdbcType=BIGINT},
      </if>
      <if test="favTime != null">
        fav_time = #{favTime,jdbcType=INTEGER},
      </if>
      <if test="favIp != null">
        fav_ip = #{favIp,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qtt.selectcar.user.entity.MemberFav">
    update member_fav
    set member_id = #{memberId,jdbcType=BIGINT},
      fav_type = #{favType,jdbcType=TINYINT},
      content_id = #{contentId,jdbcType=BIGINT},
      fav_time = #{favTime,jdbcType=INTEGER},
      fav_ip = #{favIp,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
</mapper>